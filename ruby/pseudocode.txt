assume drive code will handle use input and output - write class to computer use, driver code will translate



class Word_game
	attr_accessor :avail_guesses
	attr_reader :avail_guesses, :is_over

	def initialize(word)
	@avail_guesses = word.length
	@word = word
	end

	def check_guess(guess)
	 conditionals
	end

end


One user can enter a word (or phrase, if you would like your game to support that), and another user attempts to guess the word.

Word is string input for class .new

Guesses are limited, and the number of guesses available is related to the length of the word.

available guesses = string.length

Each guess is a string that can be split into array

While guessing, 
If Letters in matching index, logged into return array, and guess subtracted - when correct full string is input, this wins game, even if guessed words clarify answer individually
If no matching letters in == index, guess subtracted
If same guess, no guess removed - log string guesses in array
If correct string (caps do not count), user wins

If win, congratulatory message
